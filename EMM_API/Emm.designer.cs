#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMM_API
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="u0992410_EMM_1.0")]
	public partial class EmmDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertBackgroundTime_TT(BackgroundTime_TT instance);
    partial void UpdateBackgroundTime_TT(BackgroundTime_TT instance);
    partial void DeleteBackgroundTime_TT(BackgroundTime_TT instance);
    partial void InsertLocomitive_TS(Locomitive_TS instance);
    partial void UpdateLocomitive_TS(Locomitive_TS instance);
    partial void DeleteLocomitive_TS(Locomitive_TS instance);
    partial void InsertLocomotives_TT(Locomotives_TT instance);
    partial void UpdateLocomotives_TT(Locomotives_TT instance);
    partial void DeleteLocomotives_TT(Locomotives_TT instance);
    partial void InsertMeters_TT(Meters_TT instance);
    partial void UpdateMeters_TT(Meters_TT instance);
    partial void DeleteMeters_TT(Meters_TT instance);
    partial void InsertPassangers_TT(Passangers_TT instance);
    partial void UpdatePassangers_TT(Passangers_TT instance);
    partial void DeletePassangers_TT(Passangers_TT instance);
    partial void InsertStations_TS(Stations_TS instance);
    partial void UpdateStations_TS(Stations_TS instance);
    partial void DeleteStations_TS(Stations_TS instance);
    partial void InsertTrains_TT(Trains_TT instance);
    partial void UpdateTrains_TT(Trains_TT instance);
    partial void DeleteTrains_TT(Trains_TT instance);
    partial void InsertStations_TT(Stations_TT instance);
    partial void UpdateStations_TT(Stations_TT instance);
    partial void DeleteStations_TT(Stations_TT instance);
    partial void InsertDirections_TS(Directions_TS instance);
    partial void UpdateDirections_TS(Directions_TS instance);
    partial void DeleteDirections_TS(Directions_TS instance);
    partial void InsertRoutes_TT(Routes_TT instance);
    partial void UpdateRoutes_TT(Routes_TT instance);
    partial void DeleteRoutes_TT(Routes_TT instance);
    #endregion
		
		public EmmDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmmDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmmDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmmDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmmDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BackgroundTime_TT> BackgroundTime_TT
		{
			get
			{
				return this.GetTable<BackgroundTime_TT>();
			}
		}
		
		public System.Data.Linq.Table<Locomitive_TS> Locomitive_TS
		{
			get
			{
				return this.GetTable<Locomitive_TS>();
			}
		}
		
		public System.Data.Linq.Table<Locomotives_TT> Locomotives_TT
		{
			get
			{
				return this.GetTable<Locomotives_TT>();
			}
		}
		
		public System.Data.Linq.Table<Meters_TT> Meters_TT
		{
			get
			{
				return this.GetTable<Meters_TT>();
			}
		}
		
		public System.Data.Linq.Table<Passangers_TT> Passangers_TT
		{
			get
			{
				return this.GetTable<Passangers_TT>();
			}
		}
		
		public System.Data.Linq.Table<Stations_TS> Stations_TS
		{
			get
			{
				return this.GetTable<Stations_TS>();
			}
		}
		
		public System.Data.Linq.Table<Trains_TT> Trains_TT
		{
			get
			{
				return this.GetTable<Trains_TT>();
			}
		}
		
		public System.Data.Linq.Table<Stations_TT> Stations_TT
		{
			get
			{
				return this.GetTable<Stations_TT>();
			}
		}
		
		public System.Data.Linq.Table<Directions_TS> Directions_TS
		{
			get
			{
				return this.GetTable<Directions_TS>();
			}
		}
		
		public System.Data.Linq.Table<Routes_TT> Routes_TT
		{
			get
			{
				return this.GetTable<Routes_TT>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="u0992410_vitek4051.InsertBackgroundTime")]
		public int InsertBackgroundTime([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> backgroundTimeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> inspection, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> cpExit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> cpEntrance, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> change)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), backgroundTimeID, inspection, cpExit, cpEntrance, change);
			backgroundTimeID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="u0992410_vitek4051.InsertRoute")]
		public int InsertRoute([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> routeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startParameter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> finishParameter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string commentParameter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> singleParameter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeID, userID, startParameter, finishParameter, commentParameter, singleParameter);
			routeID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.BackgroundTime_TT")]
	public partial class BackgroundTime_TT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _inspection;
		
		private System.Nullable<System.DateTime> _cpExit;
		
		private System.Nullable<System.DateTime> _cpEntrance;
		
		private System.DateTime _change;
		
		private EntitySet<Locomotives_TT> _Locomotives_TT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OninspectionChanging(System.DateTime value);
    partial void OninspectionChanged();
    partial void OncpExitChanging(System.Nullable<System.DateTime> value);
    partial void OncpExitChanged();
    partial void OncpEntranceChanging(System.Nullable<System.DateTime> value);
    partial void OncpEntranceChanged();
    partial void OnchangeChanging(System.DateTime value);
    partial void OnchangeChanged();
    #endregion
		
		public BackgroundTime_TT()
		{
			this._Locomotives_TT = new EntitySet<Locomotives_TT>(new Action<Locomotives_TT>(this.attach_Locomotives_TT), new Action<Locomotives_TT>(this.detach_Locomotives_TT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inspection", DbType="DateTime NOT NULL")]
		public System.DateTime inspection
		{
			get
			{
				return this._inspection;
			}
			set
			{
				if ((this._inspection != value))
				{
					this.OninspectionChanging(value);
					this.SendPropertyChanging();
					this._inspection = value;
					this.SendPropertyChanged("inspection");
					this.OninspectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> cpExit
		{
			get
			{
				return this._cpExit;
			}
			set
			{
				if ((this._cpExit != value))
				{
					this.OncpExitChanging(value);
					this.SendPropertyChanging();
					this._cpExit = value;
					this.SendPropertyChanged("cpExit");
					this.OncpExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpEntrance", DbType="DateTime")]
		public System.Nullable<System.DateTime> cpEntrance
		{
			get
			{
				return this._cpEntrance;
			}
			set
			{
				if ((this._cpEntrance != value))
				{
					this.OncpEntranceChanging(value);
					this.SendPropertyChanging();
					this._cpEntrance = value;
					this.SendPropertyChanged("cpEntrance");
					this.OncpEntranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_change", DbType="DateTime NOT NULL")]
		public System.DateTime change
		{
			get
			{
				return this._change;
			}
			set
			{
				if ((this._change != value))
				{
					this.OnchangeChanging(value);
					this.SendPropertyChanging();
					this._change = value;
					this.SendPropertyChanged("change");
					this.OnchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BackgroundTime_TT_Locomotives_TT", Storage="_Locomotives_TT", ThisKey="id", OtherKey="backgroundTimeID")]
		public EntitySet<Locomotives_TT> Locomotives_TT
		{
			get
			{
				return this._Locomotives_TT;
			}
			set
			{
				this._Locomotives_TT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Locomotives_TT(Locomotives_TT entity)
		{
			this.SendPropertyChanging();
			entity.BackgroundTime_TT = this;
		}
		
		private void detach_Locomotives_TT(Locomotives_TT entity)
		{
			this.SendPropertyChanging();
			entity.BackgroundTime_TT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Locomitive_TS")]
	public partial class Locomitive_TS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mk;
		
		private int _sectionCount;
		
		private EntitySet<Locomotives_TT> _Locomotives_TT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmkChanging(string value);
    partial void OnmkChanged();
    partial void OnsectionCountChanging(int value);
    partial void OnsectionCountChanged();
    #endregion
		
		public Locomitive_TS()
		{
			this._Locomotives_TT = new EntitySet<Locomotives_TT>(new Action<Locomotives_TT>(this.attach_Locomotives_TT), new Action<Locomotives_TT>(this.detach_Locomotives_TT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mk", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mk
		{
			get
			{
				return this._mk;
			}
			set
			{
				if ((this._mk != value))
				{
					this.OnmkChanging(value);
					this.SendPropertyChanging();
					this._mk = value;
					this.SendPropertyChanged("mk");
					this.OnmkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sectionCount", DbType="Int NOT NULL")]
		public int sectionCount
		{
			get
			{
				return this._sectionCount;
			}
			set
			{
				if ((this._sectionCount != value))
				{
					this.OnsectionCountChanging(value);
					this.SendPropertyChanging();
					this._sectionCount = value;
					this.SendPropertyChanged("sectionCount");
					this.OnsectionCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locomitive_TS_Locomotives_TT", Storage="_Locomotives_TT", ThisKey="mk", OtherKey="locomotiveType")]
		public EntitySet<Locomotives_TT> Locomotives_TT
		{
			get
			{
				return this._Locomotives_TT;
			}
			set
			{
				this._Locomotives_TT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Locomotives_TT(Locomotives_TT entity)
		{
			this.SendPropertyChanging();
			entity.Locomitive_TS = this;
		}
		
		private void detach_Locomotives_TT(Locomotives_TT entity)
		{
			this.SendPropertyChanging();
			entity.Locomitive_TS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Locomotives_TT")]
	public partial class Locomotives_TT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _routeID;
		
		private string _locomotiveType;
		
		private string _locomotiveNumber;
		
		private int _backgroundTimeID;
		
		private EntitySet<Meters_TT> _Meters_TT;
		
		private EntitySet<Trains_TT> _Trains_TT;
		
		private EntityRef<BackgroundTime_TT> _BackgroundTime_TT;
		
		private EntityRef<Locomitive_TS> _Locomitive_TS;
		
		private EntityRef<Routes_TT> _Routes_TT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrouteIDChanging(int value);
    partial void OnrouteIDChanged();
    partial void OnlocomotiveTypeChanging(string value);
    partial void OnlocomotiveTypeChanged();
    partial void OnlocomotiveNumberChanging(string value);
    partial void OnlocomotiveNumberChanged();
    partial void OnbackgroundTimeIDChanging(int value);
    partial void OnbackgroundTimeIDChanged();
    #endregion
		
		public Locomotives_TT()
		{
			this._Meters_TT = new EntitySet<Meters_TT>(new Action<Meters_TT>(this.attach_Meters_TT), new Action<Meters_TT>(this.detach_Meters_TT));
			this._Trains_TT = new EntitySet<Trains_TT>(new Action<Trains_TT>(this.attach_Trains_TT), new Action<Trains_TT>(this.detach_Trains_TT));
			this._BackgroundTime_TT = default(EntityRef<BackgroundTime_TT>);
			this._Locomitive_TS = default(EntityRef<Locomitive_TS>);
			this._Routes_TT = default(EntityRef<Routes_TT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int routeID
		{
			get
			{
				return this._routeID;
			}
			set
			{
				if ((this._routeID != value))
				{
					if (this._Routes_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrouteIDChanging(value);
					this.SendPropertyChanging();
					this._routeID = value;
					this.SendPropertyChanged("routeID");
					this.OnrouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locomotiveType", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string locomotiveType
		{
			get
			{
				return this._locomotiveType;
			}
			set
			{
				if ((this._locomotiveType != value))
				{
					if (this._Locomitive_TS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocomotiveTypeChanging(value);
					this.SendPropertyChanging();
					this._locomotiveType = value;
					this.SendPropertyChanged("locomotiveType");
					this.OnlocomotiveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locomotiveNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string locomotiveNumber
		{
			get
			{
				return this._locomotiveNumber;
			}
			set
			{
				if ((this._locomotiveNumber != value))
				{
					this.OnlocomotiveNumberChanging(value);
					this.SendPropertyChanging();
					this._locomotiveNumber = value;
					this.SendPropertyChanged("locomotiveNumber");
					this.OnlocomotiveNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_backgroundTimeID", DbType="Int NOT NULL")]
		public int backgroundTimeID
		{
			get
			{
				return this._backgroundTimeID;
			}
			set
			{
				if ((this._backgroundTimeID != value))
				{
					if (this._BackgroundTime_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbackgroundTimeIDChanging(value);
					this.SendPropertyChanging();
					this._backgroundTimeID = value;
					this.SendPropertyChanged("backgroundTimeID");
					this.OnbackgroundTimeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locomotives_TT_Meters_TT", Storage="_Meters_TT", ThisKey="routeID,locomotiveType,locomotiveNumber", OtherKey="routeID,locomotiveType,locomotiveNumber")]
		public EntitySet<Meters_TT> Meters_TT
		{
			get
			{
				return this._Meters_TT;
			}
			set
			{
				this._Meters_TT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locomotives_TT_Trains_TT", Storage="_Trains_TT", ThisKey="routeID,locomotiveType,locomotiveNumber", OtherKey="routeID,locomotiveType,locomotiveNumber")]
		public EntitySet<Trains_TT> Trains_TT
		{
			get
			{
				return this._Trains_TT;
			}
			set
			{
				this._Trains_TT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BackgroundTime_TT_Locomotives_TT", Storage="_BackgroundTime_TT", ThisKey="backgroundTimeID", OtherKey="id", IsForeignKey=true)]
		public BackgroundTime_TT BackgroundTime_TT
		{
			get
			{
				return this._BackgroundTime_TT.Entity;
			}
			set
			{
				BackgroundTime_TT previousValue = this._BackgroundTime_TT.Entity;
				if (((previousValue != value) 
							|| (this._BackgroundTime_TT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BackgroundTime_TT.Entity = null;
						previousValue.Locomotives_TT.Remove(this);
					}
					this._BackgroundTime_TT.Entity = value;
					if ((value != null))
					{
						value.Locomotives_TT.Add(this);
						this._backgroundTimeID = value.id;
					}
					else
					{
						this._backgroundTimeID = default(int);
					}
					this.SendPropertyChanged("BackgroundTime_TT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locomitive_TS_Locomotives_TT", Storage="_Locomitive_TS", ThisKey="locomotiveType", OtherKey="mk", IsForeignKey=true)]
		public Locomitive_TS Locomitive_TS
		{
			get
			{
				return this._Locomitive_TS.Entity;
			}
			set
			{
				Locomitive_TS previousValue = this._Locomitive_TS.Entity;
				if (((previousValue != value) 
							|| (this._Locomitive_TS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Locomitive_TS.Entity = null;
						previousValue.Locomotives_TT.Remove(this);
					}
					this._Locomitive_TS.Entity = value;
					if ((value != null))
					{
						value.Locomotives_TT.Add(this);
						this._locomotiveType = value.mk;
					}
					else
					{
						this._locomotiveType = default(string);
					}
					this.SendPropertyChanged("Locomitive_TS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routes_TT_Locomotives_TT", Storage="_Routes_TT", ThisKey="routeID", OtherKey="id", IsForeignKey=true)]
		public Routes_TT Routes_TT
		{
			get
			{
				return this._Routes_TT.Entity;
			}
			set
			{
				Routes_TT previousValue = this._Routes_TT.Entity;
				if (((previousValue != value) 
							|| (this._Routes_TT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Routes_TT.Entity = null;
						previousValue.Locomotives_TT.Remove(this);
					}
					this._Routes_TT.Entity = value;
					if ((value != null))
					{
						value.Locomotives_TT.Add(this);
						this._routeID = value.id;
					}
					else
					{
						this._routeID = default(int);
					}
					this.SendPropertyChanged("Routes_TT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meters_TT(Meters_TT entity)
		{
			this.SendPropertyChanging();
			entity.Locomotives_TT = this;
		}
		
		private void detach_Meters_TT(Meters_TT entity)
		{
			this.SendPropertyChanging();
			entity.Locomotives_TT = null;
		}
		
		private void attach_Trains_TT(Trains_TT entity)
		{
			this.SendPropertyChanging();
			entity.Locomotives_TT = this;
		}
		
		private void detach_Trains_TT(Trains_TT entity)
		{
			this.SendPropertyChanging();
			entity.Locomotives_TT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Meters_TT")]
	public partial class Meters_TT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _routeID;
		
		private string _locomotiveType;
		
		private string _locomotiveNumber;
		
		private int _motorInspection;
		
		private int _motorChange;
		
		private int _brakeInspection;
		
		private int _brakeChange;
		
		private int _heatingInspection;
		
		private int _heatingChange;
		
		private EntityRef<Locomotives_TT> _Locomotives_TT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnrouteIDChanging(int value);
    partial void OnrouteIDChanged();
    partial void OnlocomotiveTypeChanging(string value);
    partial void OnlocomotiveTypeChanged();
    partial void OnlocomotiveNumberChanging(string value);
    partial void OnlocomotiveNumberChanged();
    partial void OnmotorInspectionChanging(int value);
    partial void OnmotorInspectionChanged();
    partial void OnmotorChangeChanging(int value);
    partial void OnmotorChangeChanged();
    partial void OnbrakeInspectionChanging(int value);
    partial void OnbrakeInspectionChanged();
    partial void OnbrakeChangeChanging(int value);
    partial void OnbrakeChangeChanged();
    partial void OnheatingInspectionChanging(int value);
    partial void OnheatingInspectionChanged();
    partial void OnheatingChangeChanging(int value);
    partial void OnheatingChangeChanged();
    #endregion
		
		public Meters_TT()
		{
			this._Locomotives_TT = default(EntityRef<Locomotives_TT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routeID", DbType="Int NOT NULL")]
		public int routeID
		{
			get
			{
				return this._routeID;
			}
			set
			{
				if ((this._routeID != value))
				{
					if (this._Locomotives_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrouteIDChanging(value);
					this.SendPropertyChanging();
					this._routeID = value;
					this.SendPropertyChanged("routeID");
					this.OnrouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locomotiveType", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string locomotiveType
		{
			get
			{
				return this._locomotiveType;
			}
			set
			{
				if ((this._locomotiveType != value))
				{
					if (this._Locomotives_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocomotiveTypeChanging(value);
					this.SendPropertyChanging();
					this._locomotiveType = value;
					this.SendPropertyChanged("locomotiveType");
					this.OnlocomotiveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locomotiveNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string locomotiveNumber
		{
			get
			{
				return this._locomotiveNumber;
			}
			set
			{
				if ((this._locomotiveNumber != value))
				{
					if (this._Locomotives_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocomotiveNumberChanging(value);
					this.SendPropertyChanging();
					this._locomotiveNumber = value;
					this.SendPropertyChanged("locomotiveNumber");
					this.OnlocomotiveNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motorInspection", DbType="Int NOT NULL")]
		public int motorInspection
		{
			get
			{
				return this._motorInspection;
			}
			set
			{
				if ((this._motorInspection != value))
				{
					this.OnmotorInspectionChanging(value);
					this.SendPropertyChanging();
					this._motorInspection = value;
					this.SendPropertyChanged("motorInspection");
					this.OnmotorInspectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motorChange", DbType="Int NOT NULL")]
		public int motorChange
		{
			get
			{
				return this._motorChange;
			}
			set
			{
				if ((this._motorChange != value))
				{
					this.OnmotorChangeChanging(value);
					this.SendPropertyChanging();
					this._motorChange = value;
					this.SendPropertyChanged("motorChange");
					this.OnmotorChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brakeInspection", DbType="Int NOT NULL")]
		public int brakeInspection
		{
			get
			{
				return this._brakeInspection;
			}
			set
			{
				if ((this._brakeInspection != value))
				{
					this.OnbrakeInspectionChanging(value);
					this.SendPropertyChanging();
					this._brakeInspection = value;
					this.SendPropertyChanged("brakeInspection");
					this.OnbrakeInspectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brakeChange", DbType="Int NOT NULL")]
		public int brakeChange
		{
			get
			{
				return this._brakeChange;
			}
			set
			{
				if ((this._brakeChange != value))
				{
					this.OnbrakeChangeChanging(value);
					this.SendPropertyChanging();
					this._brakeChange = value;
					this.SendPropertyChanged("brakeChange");
					this.OnbrakeChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heatingInspection", DbType="Int NOT NULL")]
		public int heatingInspection
		{
			get
			{
				return this._heatingInspection;
			}
			set
			{
				if ((this._heatingInspection != value))
				{
					this.OnheatingInspectionChanging(value);
					this.SendPropertyChanging();
					this._heatingInspection = value;
					this.SendPropertyChanged("heatingInspection");
					this.OnheatingInspectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heatingChange", DbType="Int NOT NULL")]
		public int heatingChange
		{
			get
			{
				return this._heatingChange;
			}
			set
			{
				if ((this._heatingChange != value))
				{
					this.OnheatingChangeChanging(value);
					this.SendPropertyChanging();
					this._heatingChange = value;
					this.SendPropertyChanged("heatingChange");
					this.OnheatingChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locomotives_TT_Meters_TT", Storage="_Locomotives_TT", ThisKey="routeID,locomotiveType,locomotiveNumber", OtherKey="routeID,locomotiveType,locomotiveNumber", IsForeignKey=true)]
		public Locomotives_TT Locomotives_TT
		{
			get
			{
				return this._Locomotives_TT.Entity;
			}
			set
			{
				Locomotives_TT previousValue = this._Locomotives_TT.Entity;
				if (((previousValue != value) 
							|| (this._Locomotives_TT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Locomotives_TT.Entity = null;
						previousValue.Meters_TT.Remove(this);
					}
					this._Locomotives_TT.Entity = value;
					if ((value != null))
					{
						value.Meters_TT.Add(this);
						this._routeID = value.routeID;
						this._locomotiveType = value.locomotiveType;
						this._locomotiveNumber = value.locomotiveNumber;
					}
					else
					{
						this._routeID = default(int);
						this._locomotiveType = default(string);
						this._locomotiveNumber = default(string);
					}
					this.SendPropertyChanged("Locomotives_TT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Passangers_TT")]
	public partial class Passangers_TT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _routeID;
		
		private System.DateTime _arravalTime;
		
		private System.DateTime _depatureTime;
		
		private int _train_s_number;
		
		private EntityRef<Routes_TT> _Routes_TT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnrouteIDChanging(int value);
    partial void OnrouteIDChanged();
    partial void OnarravalTimeChanging(System.DateTime value);
    partial void OnarravalTimeChanged();
    partial void OndepatureTimeChanging(System.DateTime value);
    partial void OndepatureTimeChanged();
    partial void Ontrain_s_numberChanging(int value);
    partial void Ontrain_s_numberChanged();
    #endregion
		
		public Passangers_TT()
		{
			this._Routes_TT = default(EntityRef<Routes_TT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int routeID
		{
			get
			{
				return this._routeID;
			}
			set
			{
				if ((this._routeID != value))
				{
					if (this._Routes_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrouteIDChanging(value);
					this.SendPropertyChanging();
					this._routeID = value;
					this.SendPropertyChanged("routeID");
					this.OnrouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arravalTime", DbType="DateTime NOT NULL")]
		public System.DateTime arravalTime
		{
			get
			{
				return this._arravalTime;
			}
			set
			{
				if ((this._arravalTime != value))
				{
					this.OnarravalTimeChanging(value);
					this.SendPropertyChanging();
					this._arravalTime = value;
					this.SendPropertyChanged("arravalTime");
					this.OnarravalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depatureTime", DbType="DateTime NOT NULL")]
		public System.DateTime depatureTime
		{
			get
			{
				return this._depatureTime;
			}
			set
			{
				if ((this._depatureTime != value))
				{
					this.OndepatureTimeChanging(value);
					this.SendPropertyChanging();
					this._depatureTime = value;
					this.SendPropertyChanged("depatureTime");
					this.OndepatureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_train_s_number", DbType="Int NOT NULL")]
		public int train_s_number
		{
			get
			{
				return this._train_s_number;
			}
			set
			{
				if ((this._train_s_number != value))
				{
					this.Ontrain_s_numberChanging(value);
					this.SendPropertyChanging();
					this._train_s_number = value;
					this.SendPropertyChanged("train_s_number");
					this.Ontrain_s_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routes_TT_Passangers_TT", Storage="_Routes_TT", ThisKey="routeID", OtherKey="id", IsForeignKey=true)]
		public Routes_TT Routes_TT
		{
			get
			{
				return this._Routes_TT.Entity;
			}
			set
			{
				Routes_TT previousValue = this._Routes_TT.Entity;
				if (((previousValue != value) 
							|| (this._Routes_TT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Routes_TT.Entity = null;
						previousValue.Passangers_TT.Remove(this);
					}
					this._Routes_TT.Entity = value;
					if ((value != null))
					{
						value.Passangers_TT.Add(this);
						this._routeID = value.id;
					}
					else
					{
						this._routeID = default(int);
					}
					this.SendPropertyChanged("Routes_TT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Stations_TS")]
	public partial class Stations_TS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<Trains_TT> _Trains_TT;
		
		private EntitySet<Trains_TT> _Trains_TT1;
		
		private EntitySet<Stations_TT> _Stations_TT;
		
		private EntitySet<Directions_TS> _Directions_TS;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Stations_TS()
		{
			this._Trains_TT = new EntitySet<Trains_TT>(new Action<Trains_TT>(this.attach_Trains_TT), new Action<Trains_TT>(this.detach_Trains_TT));
			this._Trains_TT1 = new EntitySet<Trains_TT>(new Action<Trains_TT>(this.attach_Trains_TT1), new Action<Trains_TT>(this.detach_Trains_TT1));
			this._Stations_TT = new EntitySet<Stations_TT>(new Action<Stations_TT>(this.attach_Stations_TT), new Action<Stations_TT>(this.detach_Stations_TT));
			this._Directions_TS = new EntitySet<Directions_TS>(new Action<Directions_TS>(this.attach_Directions_TS), new Action<Directions_TS>(this.detach_Directions_TS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stations_TS_Trains_TT", Storage="_Trains_TT", ThisKey="id", OtherKey="arravalStationID")]
		public EntitySet<Trains_TT> Trains_TT
		{
			get
			{
				return this._Trains_TT;
			}
			set
			{
				this._Trains_TT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stations_TS_Trains_TT1", Storage="_Trains_TT1", ThisKey="id", OtherKey="depatureStationID")]
		public EntitySet<Trains_TT> Trains_TT1
		{
			get
			{
				return this._Trains_TT1;
			}
			set
			{
				this._Trains_TT1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stations_TS_Stations_TT", Storage="_Stations_TT", ThisKey="id", OtherKey="stationID")]
		public EntitySet<Stations_TT> Stations_TT
		{
			get
			{
				return this._Stations_TT;
			}
			set
			{
				this._Stations_TT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stations_TS_Directions_TS", Storage="_Directions_TS", ThisKey="id", OtherKey="stationID")]
		public EntitySet<Directions_TS> Directions_TS
		{
			get
			{
				return this._Directions_TS;
			}
			set
			{
				this._Directions_TS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trains_TT(Trains_TT entity)
		{
			this.SendPropertyChanging();
			entity.Stations_TS = this;
		}
		
		private void detach_Trains_TT(Trains_TT entity)
		{
			this.SendPropertyChanging();
			entity.Stations_TS = null;
		}
		
		private void attach_Trains_TT1(Trains_TT entity)
		{
			this.SendPropertyChanging();
			entity.Stations_TS1 = this;
		}
		
		private void detach_Trains_TT1(Trains_TT entity)
		{
			this.SendPropertyChanging();
			entity.Stations_TS1 = null;
		}
		
		private void attach_Stations_TT(Stations_TT entity)
		{
			this.SendPropertyChanging();
			entity.Stations_TS = this;
		}
		
		private void detach_Stations_TT(Stations_TT entity)
		{
			this.SendPropertyChanging();
			entity.Stations_TS = null;
		}
		
		private void attach_Directions_TS(Directions_TS entity)
		{
			this.SendPropertyChanging();
			entity.Stations_TS = this;
		}
		
		private void detach_Directions_TS(Directions_TS entity)
		{
			this.SendPropertyChanging();
			entity.Stations_TS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Trains_TT")]
	public partial class Trains_TT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _routeID;
		
		private string _locomotiveType;
		
		private string _locomotiveNumber;
		
		private int _number;
		
		private int _arravalStationID;
		
		private int _depatureStationID;
		
		private int _weight;
		
		private int _axis;
		
		private int _length;
		
		private string _type;
		
		private EntityRef<Locomotives_TT> _Locomotives_TT;
		
		private EntityRef<Stations_TS> _Stations_TS;
		
		private EntityRef<Stations_TS> _Stations_TS1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnrouteIDChanging(int value);
    partial void OnrouteIDChanged();
    partial void OnlocomotiveTypeChanging(string value);
    partial void OnlocomotiveTypeChanged();
    partial void OnlocomotiveNumberChanging(string value);
    partial void OnlocomotiveNumberChanged();
    partial void OnnumberChanging(int value);
    partial void OnnumberChanged();
    partial void OnarravalStationIDChanging(int value);
    partial void OnarravalStationIDChanged();
    partial void OndepatureStationIDChanging(int value);
    partial void OndepatureStationIDChanged();
    partial void OnweightChanging(int value);
    partial void OnweightChanged();
    partial void OnaxisChanging(int value);
    partial void OnaxisChanged();
    partial void OnlengthChanging(int value);
    partial void OnlengthChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public Trains_TT()
		{
			this._Locomotives_TT = default(EntityRef<Locomotives_TT>);
			this._Stations_TS = default(EntityRef<Stations_TS>);
			this._Stations_TS1 = default(EntityRef<Stations_TS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routeID", DbType="Int NOT NULL")]
		public int routeID
		{
			get
			{
				return this._routeID;
			}
			set
			{
				if ((this._routeID != value))
				{
					if (this._Locomotives_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrouteIDChanging(value);
					this.SendPropertyChanging();
					this._routeID = value;
					this.SendPropertyChanged("routeID");
					this.OnrouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locomotiveType", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string locomotiveType
		{
			get
			{
				return this._locomotiveType;
			}
			set
			{
				if ((this._locomotiveType != value))
				{
					if (this._Locomotives_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocomotiveTypeChanging(value);
					this.SendPropertyChanging();
					this._locomotiveType = value;
					this.SendPropertyChanged("locomotiveType");
					this.OnlocomotiveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locomotiveNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string locomotiveNumber
		{
			get
			{
				return this._locomotiveNumber;
			}
			set
			{
				if ((this._locomotiveNumber != value))
				{
					if (this._Locomotives_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocomotiveNumberChanging(value);
					this.SendPropertyChanging();
					this._locomotiveNumber = value;
					this.SendPropertyChanged("locomotiveNumber");
					this.OnlocomotiveNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int NOT NULL")]
		public int number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arravalStationID", DbType="Int NOT NULL")]
		public int arravalStationID
		{
			get
			{
				return this._arravalStationID;
			}
			set
			{
				if ((this._arravalStationID != value))
				{
					if (this._Stations_TS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarravalStationIDChanging(value);
					this.SendPropertyChanging();
					this._arravalStationID = value;
					this.SendPropertyChanged("arravalStationID");
					this.OnarravalStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depatureStationID", DbType="Int NOT NULL")]
		public int depatureStationID
		{
			get
			{
				return this._depatureStationID;
			}
			set
			{
				if ((this._depatureStationID != value))
				{
					if (this._Stations_TS1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndepatureStationIDChanging(value);
					this.SendPropertyChanging();
					this._depatureStationID = value;
					this.SendPropertyChanged("depatureStationID");
					this.OndepatureStationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Int NOT NULL")]
		public int weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_axis", DbType="Int NOT NULL")]
		public int axis
		{
			get
			{
				return this._axis;
			}
			set
			{
				if ((this._axis != value))
				{
					this.OnaxisChanging(value);
					this.SendPropertyChanging();
					this._axis = value;
					this.SendPropertyChanged("axis");
					this.OnaxisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="Int NOT NULL")]
		public int length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(20)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Locomotives_TT_Trains_TT", Storage="_Locomotives_TT", ThisKey="routeID,locomotiveType,locomotiveNumber", OtherKey="routeID,locomotiveType,locomotiveNumber", IsForeignKey=true)]
		public Locomotives_TT Locomotives_TT
		{
			get
			{
				return this._Locomotives_TT.Entity;
			}
			set
			{
				Locomotives_TT previousValue = this._Locomotives_TT.Entity;
				if (((previousValue != value) 
							|| (this._Locomotives_TT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Locomotives_TT.Entity = null;
						previousValue.Trains_TT.Remove(this);
					}
					this._Locomotives_TT.Entity = value;
					if ((value != null))
					{
						value.Trains_TT.Add(this);
						this._routeID = value.routeID;
						this._locomotiveType = value.locomotiveType;
						this._locomotiveNumber = value.locomotiveNumber;
					}
					else
					{
						this._routeID = default(int);
						this._locomotiveType = default(string);
						this._locomotiveNumber = default(string);
					}
					this.SendPropertyChanged("Locomotives_TT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stations_TS_Trains_TT", Storage="_Stations_TS", ThisKey="arravalStationID", OtherKey="id", IsForeignKey=true)]
		public Stations_TS Stations_TS
		{
			get
			{
				return this._Stations_TS.Entity;
			}
			set
			{
				Stations_TS previousValue = this._Stations_TS.Entity;
				if (((previousValue != value) 
							|| (this._Stations_TS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stations_TS.Entity = null;
						previousValue.Trains_TT.Remove(this);
					}
					this._Stations_TS.Entity = value;
					if ((value != null))
					{
						value.Trains_TT.Add(this);
						this._arravalStationID = value.id;
					}
					else
					{
						this._arravalStationID = default(int);
					}
					this.SendPropertyChanged("Stations_TS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stations_TS_Trains_TT1", Storage="_Stations_TS1", ThisKey="depatureStationID", OtherKey="id", IsForeignKey=true)]
		public Stations_TS Stations_TS1
		{
			get
			{
				return this._Stations_TS1.Entity;
			}
			set
			{
				Stations_TS previousValue = this._Stations_TS1.Entity;
				if (((previousValue != value) 
							|| (this._Stations_TS1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stations_TS1.Entity = null;
						previousValue.Trains_TT1.Remove(this);
					}
					this._Stations_TS1.Entity = value;
					if ((value != null))
					{
						value.Trains_TT1.Add(this);
						this._depatureStationID = value.id;
					}
					else
					{
						this._depatureStationID = default(int);
					}
					this.SendPropertyChanged("Stations_TS1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Stations_TT")]
	public partial class Stations_TT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _routeID;
		
		private int _stationID;
		
		private System.Nullable<System.DateTime> _depatureTime;
		
		private System.Nullable<System.DateTime> _arravalTime;
		
		private System.Nullable<System.TimeSpan> _maneuvers;
		
		private EntityRef<Stations_TS> _Stations_TS;
		
		private EntityRef<Routes_TT> _Routes_TT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnrouteIDChanging(int value);
    partial void OnrouteIDChanged();
    partial void OnstationIDChanging(int value);
    partial void OnstationIDChanged();
    partial void OndepatureTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndepatureTimeChanged();
    partial void OnarravalTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnarravalTimeChanged();
    partial void OnmaneuversChanging(System.Nullable<System.TimeSpan> value);
    partial void OnmaneuversChanged();
    #endregion
		
		public Stations_TT()
		{
			this._Stations_TS = default(EntityRef<Stations_TS>);
			this._Routes_TT = default(EntityRef<Routes_TT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routeID", DbType="Int NOT NULL")]
		public int routeID
		{
			get
			{
				return this._routeID;
			}
			set
			{
				if ((this._routeID != value))
				{
					if (this._Routes_TT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrouteIDChanging(value);
					this.SendPropertyChanging();
					this._routeID = value;
					this.SendPropertyChanged("routeID");
					this.OnrouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="Int NOT NULL")]
		public int stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					if (this._Stations_TS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depatureTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> depatureTime
		{
			get
			{
				return this._depatureTime;
			}
			set
			{
				if ((this._depatureTime != value))
				{
					this.OndepatureTimeChanging(value);
					this.SendPropertyChanging();
					this._depatureTime = value;
					this.SendPropertyChanged("depatureTime");
					this.OndepatureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_arravalTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> arravalTime
		{
			get
			{
				return this._arravalTime;
			}
			set
			{
				if ((this._arravalTime != value))
				{
					this.OnarravalTimeChanging(value);
					this.SendPropertyChanging();
					this._arravalTime = value;
					this.SendPropertyChanged("arravalTime");
					this.OnarravalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maneuvers", DbType="Time")]
		public System.Nullable<System.TimeSpan> maneuvers
		{
			get
			{
				return this._maneuvers;
			}
			set
			{
				if ((this._maneuvers != value))
				{
					this.OnmaneuversChanging(value);
					this.SendPropertyChanging();
					this._maneuvers = value;
					this.SendPropertyChanged("maneuvers");
					this.OnmaneuversChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stations_TS_Stations_TT", Storage="_Stations_TS", ThisKey="stationID", OtherKey="id", IsForeignKey=true)]
		public Stations_TS Stations_TS
		{
			get
			{
				return this._Stations_TS.Entity;
			}
			set
			{
				Stations_TS previousValue = this._Stations_TS.Entity;
				if (((previousValue != value) 
							|| (this._Stations_TS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stations_TS.Entity = null;
						previousValue.Stations_TT.Remove(this);
					}
					this._Stations_TS.Entity = value;
					if ((value != null))
					{
						value.Stations_TT.Add(this);
						this._stationID = value.id;
					}
					else
					{
						this._stationID = default(int);
					}
					this.SendPropertyChanged("Stations_TS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routes_TT_Stations_TT", Storage="_Routes_TT", ThisKey="routeID", OtherKey="id", IsForeignKey=true)]
		public Routes_TT Routes_TT
		{
			get
			{
				return this._Routes_TT.Entity;
			}
			set
			{
				Routes_TT previousValue = this._Routes_TT.Entity;
				if (((previousValue != value) 
							|| (this._Routes_TT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Routes_TT.Entity = null;
						previousValue.Stations_TT.Remove(this);
					}
					this._Routes_TT.Entity = value;
					if ((value != null))
					{
						value.Stations_TT.Add(this);
						this._routeID = value.id;
					}
					else
					{
						this._routeID = default(int);
					}
					this.SendPropertyChanged("Routes_TT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Directions_TS")]
	public partial class Directions_TS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _direction;
		
		private int _stationID;
		
		private EntityRef<Stations_TS> _Stations_TS;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndirectionChanging(string value);
    partial void OndirectionChanged();
    partial void OnstationIDChanging(int value);
    partial void OnstationIDChanged();
    #endregion
		
		public Directions_TS()
		{
			this._Stations_TS = default(EntityRef<Stations_TS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direction", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string direction
		{
			get
			{
				return this._direction;
			}
			set
			{
				if ((this._direction != value))
				{
					this.OndirectionChanging(value);
					this.SendPropertyChanging();
					this._direction = value;
					this.SendPropertyChanged("direction");
					this.OndirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="Int NOT NULL")]
		public int stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					if (this._Stations_TS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stations_TS_Directions_TS", Storage="_Stations_TS", ThisKey="stationID", OtherKey="id", IsForeignKey=true)]
		public Stations_TS Stations_TS
		{
			get
			{
				return this._Stations_TS.Entity;
			}
			set
			{
				Stations_TS previousValue = this._Stations_TS.Entity;
				if (((previousValue != value) 
							|| (this._Stations_TS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stations_TS.Entity = null;
						previousValue.Directions_TS.Remove(this);
					}
					this._Stations_TS.Entity = value;
					if ((value != null))
					{
						value.Directions_TS.Add(this);
						this._stationID = value.id;
					}
					else
					{
						this._stationID = default(int);
					}
					this.SendPropertyChanged("Stations_TS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="u0992410_vitek4051.Routes_TT")]
	public partial class Routes_TT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _userID;
		
		private System.DateTime _start;
		
		private System.DateTime _finish;
		
		private string _comment;
		
		private System.Nullable<int> _single;
		
		private EntitySet<Locomotives_TT> _Locomotives_TT;
		
		private EntitySet<Passangers_TT> _Passangers_TT;
		
		private EntitySet<Stations_TT> _Stations_TT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserIDChanging(string value);
    partial void OnuserIDChanged();
    partial void OnstartChanging(System.DateTime value);
    partial void OnstartChanged();
    partial void OnfinishChanging(System.DateTime value);
    partial void OnfinishChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnsingleChanging(System.Nullable<int> value);
    partial void OnsingleChanged();
    #endregion
		
		public Routes_TT()
		{
			this._Locomotives_TT = new EntitySet<Locomotives_TT>(new Action<Locomotives_TT>(this.attach_Locomotives_TT), new Action<Locomotives_TT>(this.detach_Locomotives_TT));
			this._Passangers_TT = new EntitySet<Passangers_TT>(new Action<Passangers_TT>(this.attach_Passangers_TT), new Action<Passangers_TT>(this.detach_Passangers_TT));
			this._Stations_TT = new EntitySet<Stations_TT>(new Action<Stations_TT>(this.attach_Stations_TT), new Action<Stations_TT>(this.detach_Stations_TT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start", DbType="DateTime NOT NULL")]
		public System.DateTime start
		{
			get
			{
				return this._start;
			}
			set
			{
				if ((this._start != value))
				{
					this.OnstartChanging(value);
					this.SendPropertyChanging();
					this._start = value;
					this.SendPropertyChanged("start");
					this.OnstartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finish", DbType="DateTime NOT NULL")]
		public System.DateTime finish
		{
			get
			{
				return this._finish;
			}
			set
			{
				if ((this._finish != value))
				{
					this.OnfinishChanging(value);
					this.SendPropertyChanging();
					this._finish = value;
					this.SendPropertyChanged("finish");
					this.OnfinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_single", DbType="Int")]
		public System.Nullable<int> single
		{
			get
			{
				return this._single;
			}
			set
			{
				if ((this._single != value))
				{
					this.OnsingleChanging(value);
					this.SendPropertyChanging();
					this._single = value;
					this.SendPropertyChanged("single");
					this.OnsingleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routes_TT_Locomotives_TT", Storage="_Locomotives_TT", ThisKey="id", OtherKey="routeID")]
		public EntitySet<Locomotives_TT> Locomotives_TT
		{
			get
			{
				return this._Locomotives_TT;
			}
			set
			{
				this._Locomotives_TT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routes_TT_Passangers_TT", Storage="_Passangers_TT", ThisKey="id", OtherKey="routeID")]
		public EntitySet<Passangers_TT> Passangers_TT
		{
			get
			{
				return this._Passangers_TT;
			}
			set
			{
				this._Passangers_TT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routes_TT_Stations_TT", Storage="_Stations_TT", ThisKey="id", OtherKey="routeID")]
		public EntitySet<Stations_TT> Stations_TT
		{
			get
			{
				return this._Stations_TT;
			}
			set
			{
				this._Stations_TT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Locomotives_TT(Locomotives_TT entity)
		{
			this.SendPropertyChanging();
			entity.Routes_TT = this;
		}
		
		private void detach_Locomotives_TT(Locomotives_TT entity)
		{
			this.SendPropertyChanging();
			entity.Routes_TT = null;
		}
		
		private void attach_Passangers_TT(Passangers_TT entity)
		{
			this.SendPropertyChanging();
			entity.Routes_TT = this;
		}
		
		private void detach_Passangers_TT(Passangers_TT entity)
		{
			this.SendPropertyChanging();
			entity.Routes_TT = null;
		}
		
		private void attach_Stations_TT(Stations_TT entity)
		{
			this.SendPropertyChanging();
			entity.Routes_TT = this;
		}
		
		private void detach_Stations_TT(Stations_TT entity)
		{
			this.SendPropertyChanging();
			entity.Routes_TT = null;
		}
	}
}
#pragma warning restore 1591
